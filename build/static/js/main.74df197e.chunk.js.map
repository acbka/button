{"version":3,"sources":["common/color.js","components/UserStatus.jsx","common/draw.js","components/Button.jsx","img/circle.svg","img/Magnifier.svg","img/Visit Arrow.svg","components/Member.jsx","App.js","reportWebVitals.js","index.js"],"names":["color","lit","unlit","broken","UserStatus","member","canvasRef","useRef","center","useEffect","canvas","current","context","getContext","width","height","clearRect","forEach","el","startArc","start","Math","PI","endtArc","end","ctx","radius","beginPath","lineWidth","arc","strokeStyle","stroke","drawArc","status","crossCenter","x","cos","y","sin","fillStyle","fill","moveTo","lineTo","drawCross","number","string","angle","font","translate","rotate","textAlign","i","length","save","fillText","restore","drawTitle","className","ref","Button","clickButton","icon","name","onClick","e","preventDefault","src","alt","Member","dataInput","useState","value","setValue","list","map","item","index","onChange","target","App","members","setMembers","newMemberIndex","newMembers","id","circle","alert","magnifier","visitArrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74df197e.chunk.js","sourcesContent":["export const color = {lit:\"#b9c6ce\", unlit:\"#6c889a\", broken:\"#C42F2F\"};","import React, { useRef, useEffect} from 'react';\nimport '../css/userStatus.css';\nimport { color } from '../common/color';\nimport { drawArc } from '../common/draw';\nimport { drawCross } from '../common/draw';\nimport { drawTitle } from '../common/draw';\nimport { clear } from '../common/draw'\n\n\nexport const UserStatus = ({member}) => {\n\n   const canvasRef = useRef(null);\n   const radius = 88;\n   const center = 100;\n\n   \n\n   useEffect(() => {\n      \n      const canvas = canvasRef.current\n      const context = canvas.getContext('2d');\n      canvas.width = 200;\n      canvas.height = 200;\n      \n      clear(context);\n\n      member.forEach(el => {\n         let startArc = (el.start+1)*Math.PI/180;\n         let endtArc = (el.end-1)*Math.PI/180;\n\n         \n         drawArc(context, startArc, endtArc, color[el.status], center, radius)\n\n         if (el.status === \"broken\") {\n            let crossCenter = (endtArc-startArc)/2 + startArc;\n            let x = radius * Math.cos(crossCenter) + center;\n            let y = radius * Math.sin(crossCenter) + center;\n            drawCross (context, x, y, color[el.status])\n         }\n      });\n\n      drawTitle(context, member.length, center)\n\n   }, [member])\n   \n   return <canvas className=\"canvas\" ref={canvasRef}/>\n}","export const clear = (ctx) => {\n   ctx.clearRect(0, 0, 200, 200); \n}\n\nexport const drawArc = (ctx, start, end, color, center, radius) => {\n   \n   ctx.beginPath();\n   ctx.lineWidth = 10;\n   ctx.arc(center, center, radius, start, end);\n   ctx.strokeStyle = color; \n   ctx.stroke();\n}\n\nexport const drawCross = (ctx, x, y, color) => {\n   ctx.lineWidth = 1;\n   ctx.beginPath();\n   ctx.arc(x, y, 8, 0, 2*Math.PI);\n   ctx.fillStyle = color;\n   ctx.fill();\n   ctx.stroke();\n\n   ctx.beginPath();\n   ctx.lineWidth = 1;\n   ctx.moveTo(x-3, y-3);\n   ctx.lineTo(x+3, y+3);\n   ctx.strokeStyle = \"white\";\n   ctx.stroke();\n\n   ctx.beginPath();\n   ctx.lineWidth = 1;\n   ctx.moveTo(x+3, y-3);\n   ctx.lineTo(x-3, y+3);\n   ctx.strokeStyle = \"white\";\n   ctx.stroke();\n}\n\nexport const drawTitle = (ctx, number, center) => {\n   let string = \"Team of \"+ number; \n   let angle = Math.PI * .8 ; \n   let radius = 42; \n   ctx.font = \"20px monospace\";\n   ctx.translate(center, center); \n   ctx.rotate(-1 * angle / 1.8); \n   ctx.fillStyle = \"white\"; \n   ctx.textAlign = \"center\";\n\n   for (let i = 0; i < string.length; i++) { \n      ctx.rotate(angle / string.length); \n      ctx.save(); \n      ctx.translate(0, -1 * radius); \n      ctx.fillText(string[i], 0, 0); \n      ctx.restore(); \n  } \n};","import React from 'react';\nimport '../css/button.css'\n\nexport const Button = ({clickButton, icon, name}) => {\n\n   const handleClick = e => {\n      e.preventDefault();\n      clickButton();\n   };\n\n   return (\n      <div>\n         <button className={name} onClick={handleClick}><img src={icon} alt={name} /></button>\n      </div>\n   )\n}","export default __webpack_public_path__ + \"static/media/circle.b324166e.svg\";","export default __webpack_public_path__ + \"static/media/Magnifier.cfe3344a.svg\";","export default __webpack_public_path__ + \"static/media/Visit Arrow.25c31f36.svg\";","import React, { useState} from 'react';\nimport '../css/member.css'\n\nexport const Member = ({dataInput, status}) => {\n\n   const [value, setValue] = useState(\"lit\");\n\n   const handleChange = e => {\n      e.preventDefault();\n      setValue (e.target.value);\n   };\n\n   const handleClick = e => {\n      e.preventDefault();\n      dataInput(value);\n   };\n\n   const list = status.map((item, index) => {\n      return <option key = {index} value = {item}>{item}</option>\n   })\n\n   return (\n      <div>\n         <form className=\"user-form\">\n         <p className=\"text\">Add a user with </p>\n            <select className=\"select-user\"\n            onChange={handleChange}>\n               {list}\n            </select>\n            <p className=\"text\"> status</p>\n            <button className=\"addButton\" onClick={handleClick}>add</button>\n         </form>\n      </div>\n   )\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { UserStatus } from './components/UserStatus';\nimport { Button } from './components/Button';\nimport circle from './img/circle.svg';\nimport magnifier from './img/Magnifier.svg';\nimport visitArrow from './img/Visit Arrow.svg'\nimport { Member } from './components/Member';\n\nfunction App() {\n\n   const status = [\"lit\", \"unlit\", \"broken\"];\n\n   //const member = [];\n\n\n\n   //const numberOfMembers = random (2, 9);\n\n  // const arcStep = 360 / numberOfMembers;\n   \n\n\n\n   const [members, setMembers] = useState([]);\n\nconst addMember = (value) => {\n  const newMemberIndex = members.length + 1;\n  let newMembers = [];\n\n  if (newMemberIndex > 1) {\n    newMembers = members.map((member) => {\n      return {\n        ...member,\n        start: (360 / newMemberIndex) * member.id,\n        end: (360 / newMemberIndex) * (member.id + 1),\n      };\n    });\n  }\n\n  setMembers([\n    ...newMembers,\n    {\n      id: newMemberIndex - 1,\n      start: (360 / newMemberIndex) * (newMemberIndex - 1),\n      end: (360 / newMemberIndex) * newMemberIndex,\n      status: value,\n    },\n  ]);\n  \n};\n\n\n   const search = () => {\n      alert(\"search\")\n   }\n\n   const visit = () => {\n      alert(\"visit\")\n   }\n\n  return (\n   <div>\n      <Member dataInput={addMember} status={status}></Member>\n      <div className=\"main-circle\">\n         <img src={circle} alt=\"circle\"></img>\n         <UserStatus member={members}></UserStatus>\n         <Button clickButton={search} icon={magnifier} name=\"magnifier\"></Button>\n         <Button clickButton={visit} icon={visitArrow} name=\"visit\"></Button>\n      </div>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}